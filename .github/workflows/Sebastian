- nombre: Cache Usos: actions/cache@v4.0.2 Con: # Una lista de archivos, directorios y patrones de comodines para almacenar en caché y restaurar Camino: # Una clave explícita para restaurar y guardar la caché Clave: # Una lista ordenada de claves que se utilizarán para restaurar la caché ranicia si no se produjo ningún golpe de caché para la clave. Tenga en cuenta que `cache-hit` devuelve falso en este caso. llaves de restauración: # opcional # El tamaño del fragmento utilizado para dividir archivos grandes durante la carga, en bytes upload-chunk-size: # opcional # Un booleano opcional cuando está habilitado, permite a los corredores de Windows guardar o restaurar cachés que se pueden restaurar o guardar respectivamente en otras plataformas enableCrossOsArchive: # opcional, el valor predeterminado es falso # Falla el flujo de trabajo si no se encuentra la entrada de caché fail-on-cache-miss: # opcional, el valor predeterminado es falso # Compruebe si existe una entrada de caché para la(s) entrada(s) dada(s) (clave, claves de restauración) sin descargar la caché solo búsqueda: # opcional, el valor predeterminado es falso # Ejecute el paso de publicación para guardar la caché incluso si otro paso antes falla save-always: # opcional, el valor predeterminado es - nombre: Configurar el entorno Node.js usos: actions/setup-node@v4.0.3 Con: # Establecer always-auth en npmrc. always-auth: # opcional, el valor predeterminado es falso # Versión Especificaciones de la versión a usar. Ejemplos: 12.x, 10.15.1, >=10.15.0. versión de nodo: # opcional # Archivo que contiene la especificación de la versión a utilizar. Ejemplos: package.json, .nvmrc, .node-version, .tool-versions. nodo-versión-archivo: # opcional # Arquitectura de destino para que Node la use. Ejemplos: x86, x64. Utilizará la arquitectura del sistema por defecto. arquitectura: # opcional # Configure esta opción si desea que la acción compruebe la última versión disponible que cumpla con la especificación de la versión. check-latest: # opcional # Registro opcional para configurar para la auth. Se establecerá el registro en un archivo .npmrc y .yarnrc a nivel de proyecto, y configurará la auth para leer desde env.NODE_AUTH_TOKEN. registry-url: # opcional # Alcance opcional para la autenticación contra los registros con alcance. Volverá al propietario del repositorio cuando use el registro de paquetes de GitHub (https://npm.pkg.github.com/). alcance: # opcional # Se utiliza para extraer distribuciones de nodos de versiones de nodos. Dado que hay un valor predeterminado, esto normalmente no es suministrado por el usuario. Al ejecutar esta acción en github.com, el valor predeterminado es suficiente. Al ejecutarse en GHES, puede pasar un token de acceso personal para github.com si está experimentando una limitación de velocidad. token: # opcional, el valor predeterminado es ${{ github.server_url == 'https://github.com' && github.token || '' }} # Se utiliza para especificar un administrador de paquetes para almacenar en caché en el directorio predeterminado. Valores admitidos: npm, yarn, pnpm. caché: # opcional # Se utiliza para especificar la ruta a un archivo de dependencia: package-lock.json, yarn.lock, etc. Admite comodines o una lista de nombres de archivo para almacenar en caché múltiples dependencias. Cache-dependency-path: # - nombre: Configurar el entorno Node.js usos: actions/setup-node@v4.0.3 Con: # Establecer always-auth en npmrc. always-auth: # opcional, el valor predeterminado es falso # Versión Especificaciones de la versión a usar. Ejemplos: 12.x, 10.15.1, >=10.15.0. versión de nodo: # opcional # Archivo que contiene la especificación de la versión a utilizar. Ejemplos: package.json, .nvmrc, .node-version, .tool-versions. nodo-versión-archivo: # opcional # Arquitectura de destino para que Node la use. Ejemplos: x86, x64. Utilizará la arquitectura del sistema por defecto. arquitectura: # opcional # Configure esta opción si desea que la acción compruebe la última versión disponible que cumpla con la especificación de la versión. check-latest: # opcional # Registro opcional para configurar para la auth. Se establecerá el registro en un archivo .npmrc y .yarnrc a nivel de proyecto, y configurará la auth para leer desde env.NODE_AUTH_TOKEN. registry-url: # opcional # Alcance opcional para la autenticación contra los registros con alcance. Volverá al propietario del repositorio cuando use el registro de paquetes de GitHub (https://npm.pkg.github.com/). alcance: # opcional # Se utiliza para extraer distribuciones de nodos de versiones de nodos. Dado que hay un valor predeterminado, esto normalmente no es suministrado por el usuario. Al ejecutar esta acción en github.com, el valor predeterminado es suficiente. Al ejecutarse en GHES, puede pasar un token de acceso personal para github.com si está experimentando una limitación de velocidad. token: # opcional, el valor predeterminado es ${{ github.server_url == 'https://github.com' && github.token || '' }} # Se utiliza para especificar un administrador de paquetes para almacenar en caché en el directorio predeterminado. Valores admitidos: npm, yarn, pnpm. caché: # opcional # Se utiliza para especificar la ruta a un archivo de dependencia: package-lock.json, yarn.lock, etc. Admite comodines o una lista de nombres de archivo para almacenar en caché múltiples dependencias. Cache-dependency-path: # - nombre: Configurar el entorno Node.js usos: actions/setup-node@v4.0.3 Con: # Establecer always-auth en npmrc. always-auth: # opcional, el valor predeterminado es falso # Versión Especificaciones de la versión a usar. Ejemplos: 12.x, 10.15.1, >=10.15.0. versión de nodo: # opcional # Archivo que contiene la especificación de la versión a utilizar. Ejemplos: package.json, .nvmrc, .node-version, .tool-versions. nodo-versión-archivo: # opcional # Arquitectura de destino para que Node la use. Ejemplos: x86, x64. Utilizará la arquitectura del sistema por defecto. arquitectura: # opcional # Configure esta opción si desea que la acción compruebe la última versión disponible que cumpla con la especificación de la versión. check-latest: # opcional # Registro opcional para configurar para la auth. Se establecerá el registro en un archivo .npmrc y .yarnrc a nivel de proyecto, y configurará la auth para leer desde env.NODE_AUTH_TOKEN. registry-url: # opcional # Alcance opcional para la autenticación contra los registros con alcance. Volverá al propietario del repositorio cuando use el registro de paquetes de GitHub (https://npm.pkg.github.com/). alcance: # opcional # Se utiliza para extraer distribuciones de nodos de versiones de nodos. Dado que hay un valor predeterminado, esto normalmente no es suministrado por el usuario. Al ejecutar esta acción en github.com, el valor predeterminado es suficiente. Al ejecutarse en GHES, puede pasar un token de acceso personal para github.com si está experimentando una limitación de velocidad. token: # opcional, el valor predeterminado es ${{ github.server_url == 'https://github.com' && github.token || '' }} # Se utiliza para especificar un administrador de paquetes para almacenar en caché en el directorio predeterminado. Valores admitidos: npm, yarn, pnpm. caché: # opcional # Se utiliza para especificar la ruta a un archivo de dependencia: package-lock.json, yarn.lock, etc. Admite comodines o una lista de nombres de archivo para almacenar en caché múltiples dependencias. Cache-dependency-path: # opcional 
- nombre: Subir un artefacto de construcción usos: actions/upload-artifact@v3.2.1-node20 Con: # Nombre del artefacto nombre: # opcional, el valor predeterminado es artefacto # Un archivo, directorio o patrón de comodín que describe qué cargar Camino: # El comportamiento deseado si no se encuentran archivos utilizando la ruta proporcionada. Opciones disponibles: advertir: Genera una advertencia, pero no falle la acción error: Falla la acción con un mensaje de error Ignorar: No emite ninguna advertencia o error, la acción no falla  if-no-files-found: # opcional, el valor predeterminado es advertir # Duración después de la cual el artefacto caducará en días. 0 significa usar la retención predeterminada. Mínimo 1 día. Máximo 90 días a menos que se cambie desde la página de configuración del repositorio.  Días de retención: # opcional # Si es cierto, los archivos ocultos se incluirán en el artefacto cargado. Si es falso, los archivos ocultos se excluirán del artefacto cargado.  include-hidden-files: # opcional, el valor predeterminado es falso 
- nombre: Cerrar problemas rancios Usos: actions/stale@v9.0.0 Con: # Token para el repositorio. Se puede pasar usando `{{ secrets.GITHUB_TOKEN }}`. repositorio: # opcional, el valor predeterminado es ${{ github.token }} # El mensaje para publicar sobre el problema al etiquetarlo. Si no se proporciona ninguno, no marcará los problemas como ranolios. mensaje de-problema-rancio: # opcional # El mensaje para publicar en la solicitud de extracción al etiquetarla. Si no se proporciona ninguno, no marcará las solicitudes de extracción como oles. stale-pr-message: # opcional # El mensaje para publicar sobre el problema al cerrarlo. Si no se proporciona ninguno, no comentará al cerrar un problema. mensaje de-problema-cerre: # opcional # El mensaje para publicar en la solicitud de extracción al cerrarla. Si no se proporciona ninguno, no comentará al cerrar una solicitud de extracción. Cerrar-pr-mensaje: # opcional # El número de días de antigüedad que puede haber un problema o una solicitud de extracción antes de marcarlo como rantico. Establezca en -1 para nunca marcar problemas o solicitudes de extracción como obsoletos automáticamente. days-before-stale: # opcional, el valor predeterminado es 60 # El número de días de antigüedad que puede ser un problema antes de marcarlo como rantio. Establezca en -1 para nunca marcar los problemas como obsoletos automáticamente. Anular la opción "días antes de la rancia" con respecto solo a los problemas. días-antes-de-edición-stana: # opcional # El número de días de antigüedad que puede ser una solicitud de extracción antes de marcarla como rantia. Establezca en -1 para nunca marcar automáticamente las solicitudes de extracción como ranticadas. Anular la opción "días antes de la rancia" con respecto solo a las solicitudes de extracción. días-antes-de-pr-stale: # opcional # El número de días que se espera para cerrar un problema o una solicitud de extracción después de que se haya marcado como anticio. Establezca en -1 para no cerrar nunca problemas rantios o solicitudes de extracción. días-antes-de-cierre: # opcional, el valor predeterminado es 7 # El número de días que se espera para cerrar un problema después de que se marque como antiguado. Establezca en -1 para nunca cerrar problemas rantios. Anular la opción "días antes del cierre" con respecto solo a los problemas. días-antes-del-cierre-de-la-emisión: # opcional # El número de días que se deben esperar para cerrar una solicitud de extracción después de que se marque como obsoleta. Establezca en -1 para no cerrar nunca las solicitudes de extracción rantias. Anular la opción "días antes del cierre" con respecto solo a las solicitudes de extracción. días-antes-del-cierre: # opcional # La etiqueta que se aplica cuando un problema está ranuciado. stale-issue-label: # opcional, el valor predeterminado es Stale # La etiqueta que se aplica cuando se cierra un problema. cerrar-edición-etiqueta: # opcional # Las etiquetas que significan que un problema está exento de ser marcado como ranuto. Separe múltiples etiquetas con comas (por ejemplo, "etiqueta1,etiqueta2"). exempt-issue-labels: # opcional, el valor predeterminado es # La razón a utilizar al cerrar un problema. close-issue-reason: # opcional, el valor predeterminado no está_planificado # La etiqueta que se aplica cuando una solicitud de extracción está ranticada. stale-pr-label: # opcional, el valor predeterminado es Stale # La etiqueta que se aplica cuando se cierra una solicitud de extracción. cerrar-pr-etiqueta: # opcional # Las etiquetas que significan que una solicitud de extracción está exenta de ser marcada como obsoleta. Separe múltiples etiquetas con comas (por ejemplo, "etiqueta1,etiqueta2"). exempt-pr-labels: # opcional, el valor predeterminado es # Los hitos que significan un problema o una solicitud de extracción están exentos de ser marcados como ranticos. Separe múltiples hitos con comas (por ejemplo, "hito1, hito2"). hitos exentos: # opcional, el valor predeterminado es # Los hitos que significan que un problema está exento de ser marcado como anticuo. Separe múltiples hitos con comas (por ejemplo, "hito1, hito2"). Anular la opción de "hitos exentos" con respecto solo a los problemas. hitos-exentos-exentos: # opcional, el valor predeterminado es # Los hitos que significan que una solicitud de extracción está exenta de ser marcada como rancia. Separe múltiples hitos con comas (por ejemplo, "hito1, hito2"). Anular la opción "exención de hitos" con respecto a solo las solicitudes de extracción. exención-pr-hitos: # opcional, el valor predeterminado es # Eximir todos los problemas y solicitudes de extracción con hitos de ser marcados como ranusos. El valor predeterminado es falso. exempt-all-miles: # opcional, el valor predeterminado es falso # Exime todos los problemas con los hitos de ser marcados como ranciados. Anular la opción "eximir todos los hitos" con respecto solo a los problemas. eximir-todos-los-hitos-de-emisión: # opcional, el valor predeterminado es # Exime todas las solicitudes de extracción con hitos de ser marcados como rantiados. Anular la opción "eximir todos los hitos" con respecto solo a las solicitudes de extracción. exen-todos-los-hitos-pr: # opcional, el valor predeterminado es # Solo se comprueban los problemas o las solicitudes de extracción con todas estas etiquetas si están rantias. El valor predeterminado es `` (deshabilitado) y puede ser una lista de etiquetas separadas por comas. only-labels: # opcional, el valor predeterminado es # Solo se comprueban los problemas o las solicitudes de extracción con al menos una de estas etiquetas si están rantiliadas. El valor predeterminado es `` (deshabilitado) y puede ser una lista de etiquetas separadas por comas. cualquiera de las etiquetas: # opcional, el valor predeterminado es # Solo se comprueban los problemas con al menos una de estas etiquetas si están ranuciadas. El valor predeterminado es `` (deshabilitado) y puede ser una lista de etiquetas separadas por comas. Anular la opción "cualquiera de las etiquetas" con respecto solo a los problemas. cualquier-de-las-etiquetas-de-problema: # opcional, el valor predeterminado es # Solo se comprueban las solicitudes de extracción con al menos una de estas etiquetas si están ranciadas. El valor predeterminado es `` (deshabilitado) y puede ser una lista de etiquetas separadas por comas. Anular la opción "cualquiera de etiquetas" con respecto a solo las solicitudes de extracción. cualquiera de-las-etiquetas de pr: # opcional, el valor predeterminado es # Solo se comprueban los problemas con todas estas etiquetas si están ranucias. El valor predeterminado es `[]` (deshabilitado) y puede ser una lista de etiquetas separadas por comas. Anular la opción "solo etiquetas" con respecto solo a los problemas. only-issue-labels: # opcional, el valor predeterminado es # Solo se comprueban las solicitudes de extracción con todas estas etiquetas si están ranuadas. El valor predeterminado es `[]` (deshabilitado) y puede ser una lista de etiquetas separadas por comas. Anular la opción de "solo etiquetas" con respecto a solo las solicitudes de extracción. only-pr-labels: # opcional, el valor predeterminado es # El número máximo de operaciones por ejecución, utilizado para controlar la limitación de velocidad (relacionado con el CRUD de la API de GitHub). operaciones-por-ecapución: # opcional, el valor predeterminado es 30 # Eliminar etiquetas ranticuas de los problemas y solicitudes de extracción cuando se actualicen o comenten. remove-stale-when-updated: # opcional, el valor predeterminado es verdadero # Eliminar etiquetas ranticuadas de los problemas cuando se actualicen o comenten. Anular la opción "eliminar-sancio-cuando-actualizado" con respecto solo a los problemas. remove-issue-stale-when-updated: # opcional, el valor predeterminado es # Eliminar etiquetas ranticuadas de las solicitudes de extracción cuando se actualicen o comenten. Anular la opción "eliminar-rante-actualizado-cuando-actualizado" con respecto solo a las solicitudes de extracción. remove-pr-stale-when-updated: # opcional, el valor predeterminado es # Ejecute el procesador en modo de depuración sin realizar ninguna operación en problemas en vivo. solo depuración: # opcional, el valor predeterminado es falso # El orden para obtener problemas o solicitudes de extracción. El valor predeterminado es falso, que es descendente. ascendente: # opcional, el valor predeterminado es falso # Eliminar la rama git después de cerrar una solicitud de extracción rantica. delete-branch: # opcional, el valor predeterminado es falso # La fecha utilizada para omitir la acción ranupiada en la solicitud de emisión/extracción creada antes de ella (ISO 8601 o RFC 2822). Fecha de inicio: # opcional, el valor predeterminado es # Los asignados que eximen un problema o una solicitud de extracción para que se marquen como rano. Separe a varios asignados con comas (por ejemplo, "usuario1, usuario2"). Asignados exentos: # opcional, el valor predeterminado es # Los cesionarios que eximen un problema de ser marcado como ranticuado. Separe a varios asignados con comas (por ejemplo, "usuario1, usuario2"). Anular la opción "exentos-asignadores" con respecto solo a los problemas. Asignados de emisión exenta: # opcional, el valor predeterminado es # Los asignados que eximen una solicitud de extracción de ser marcada como obsolesa. Separe a varios asignados con comas (por ejemplo, "usuario1, usuario2"). Anular la opción "exentos-asignados" con respecto a solo las solicitudes de extracción. exempt-pr-assignear: # opcional, el valor predeterminado es # Eximir todos los problemas y solicitudes de extracción con los asignados de ser marcados como ranticiados. El valor predeterminado es falso. eximir-a todos-los-asignados: # opcional, el valor predeterminado es falso # Eximir todos los problemas con los asignados de ser marcados como obsoletos. Anular la opción "exenta de todos los asignados" con respecto solo a los problemas. exento-de-todos-los-asignados-de-problemas: # opcional, el valor predeterminado es # Exime todas las solicitudes de extracción con los asignados de ser marcadas como ranticadas. Anular la opción "eximir a todos los asignantes" con respecto solo a las solicitudes de extracción. exención-de-todo-los-asignados-pr: # opcional, el valor predeterminado es # Eximir las solicitudes de extracción de borrador para que se marquen como ranciadas. El valor predeterminado es falso. exempt-draft-pr: # opcional, el valor predeterminado es falso # Muestra algunas estadísticas al final con respecto al flujo de trabajo ranciado (solo cuando los registros están habilitados). enable-statistics: # opcional, el valor predeterminado es verdadero # Una lista de etiquetas delimitada por comas para agregar cuando un problema o una solicitud de extracción se vuelve no obsoleta. etiquetas-para-agregar-cuando-no-esténido: # opcional, el valor predeterminado es # Una lista de etiquetas delimitada por comas para eliminar cuando un problema o una solicitud de extracción se vuelve obsoleta. etiquetas-para-eliminar-cuando-salo: # opcional, el valor predeterminado es # Una lista de etiquetas delimitadas por comas para eliminar cuando un problema o una solicitud de extracción se vuelve insoso. etiquetas-para-eliminar-cuando-no-esténido: # opcional, el valor predeterminado es # Cualquier actualización (actualización/comentario) puede restablecer el tiempo de inactividad en los problemas y las solicitudes de extracción. ignore-updates: # opcional, el valor predeterminado es falso # Cualquier actualización (actualización/comentario) puede restablecer el tiempo de inactividad en los problemas. Anular la opción "ignorar actualizaciones" con respecto solo a los problemas. ignore-issue-updates: # opcional, el valor predeterminado es # Cualquier actualización (actualización/comentario) puede restablecer el tiempo de inactividad en las solicitudes de extracción. Anular la opción "ignorar-actualizaciones" con respecto solo a las solicitudes de extracción. ignore-pr-updates: # opcional, el valor predeterminado es # Solo los problemas o las solicitudes de extracción con un asignado se marcarán como rantiados automáticamente. include-only-assigned: # opcional, el valor predeterminado es falso 
- nombre: Configuración. NET Core SDK Usos: actions/setup-dotnet@v4.0.1 Con: # Versión(es) opcional(es) del SDK para usar. Si no se proporciona, instalará la versión global.json cuando esté disponible. Ejemplos: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx versión de dotnet: # opcional # Calidad opcional de la construcción. Los valores posibles son: diario, firmado, validado, vista previa, ga. dotnet-quality: # opcional # Ubicación opcional de global.json, si su global.json no se encuentra en la raíz del repositorio. archivo-json-global: # opcional # Fuente de paquete opcional para configurar la autenticación. Consultará cualquier NuGet.config existente en la raíz del repositorio y proporcionará un NuGet.config temporal utilizando la variable de entorno NUGET_AUTH_TOKEN como ClearTextPassword Source-url: # opcional # PROPIETARIO opcional para usar paquetes de organizaciones/usuarios del Registro de Paquetes de GitHub que no sean el propietario del repositorio actual. Solo se usa si también se proporciona una URL de GPR en la url de origen Propietario: # opcional # Ubicación opcional de NuGet.config, si su NuGet.config no se encuentra en la raíz del repositorio. archivo de configuración: # opcional # Entrada opcional para habilitar el almacenamiento en caché de la carpeta NuGet global-packages caché: # opcional # Se utiliza para especificar la ruta a un archivo de dependencia: packages.lock.json. Admite comodines o una lista de nombres de archivo para almacenar en caché múltiples dependencias. Cache-dependency-path: # opcional 
- nombre: Subir un artefacto de construcción usos: actions/upload-artifact@v3.2.1-node20 Con: # Nombre del artefacto nombre: # opcional, el valor predeterminado es artefacto # Un archivo, directorio o patrón de comodín que describe qué cargar Camino: # El comportamiento deseado si no se encuentran archivos utilizando la ruta proporcionada. Opciones disponibles: advertir: Genera una advertencia, pero no falle la acción error: Falla la acción con un mensaje de error Ignorar: No emite ninguna advertencia o error, la acción no falla  if-no-files-found: # opcional, el valor predeterminado es advertir # Duración después de la cual el artefacto caducará en días. 0 significa usar la retención predeterminada. Mínimo 1 día. Máximo 90 días a menos que se cambie desde la página de configuración del repositorio.  Días de retención: # opcional # Si es cierto, los archivos ocultos se incluirán en el artefacto cargado. Si es falso, los archivos ocultos se excluirán del artefacto cargado.  include-hidden-files: # opcional, el valor predeterminado es falso 
- nombre: Acción de despliegue de Velocity # Puede fijar a la confirmación exacta o a la versión. # usos: codeclimate/velocity-deploy-action@1b4a22f0db113bf8d85c14fd726cf0ec6d17cd13 usos: codeclimate/velocity-deploy-action@v1.0.0 Con: # Su token de implementación de Velocity Ficha: # La etiqueta de versión para la implementación (es decir, `b123`) versión: # opcional # El entorno de la implementación (es decir, `producción`) entorno: # opcional 
- nombre: Primera interacción Usos: actions/first-interaction@v1.3.0 Con: # Token para el repositorio. Se puede pasar usando {{ secrets.GITHUB_TOKEN }} token de recompra: # Comenta para publicar en el primer número de un individuo mensaje de emisión: # opcional # Comenta para publicar en la primera solicitud de extracción de un individuo pr-message: # opcional 
- nombre: Configurar Java JDK usos: actions/setup-java@v4.3.0 Con: # La versión de Java a configurar. Toma una versión completa o total de Java. Vea ejemplos de sintaxis admitida en el archivo README versión java: # opcional # La ruta al archivo `.java-version`. Vea ejemplos de sintaxis admitida en el archivo README Java-version-file: # opcional # Distribución Java. Vea la lista de distribuciones compatibles en el archivo README Distribución: # El tipo de paquete (jdk, jre, jdk+fx, jre+fx) paquete java: # opcional, el valor predeterminado es jdk # La arquitectura del paquete (por defecto es la arquitectura del ejecutor de acciones) arquitectura: # opcional # Ruta hacia donde se encuentra el JDK comprimido jdkFile: # opcional # Establezca esta opción si desea que la acción compruebe la última versión disponible que cumpla con la especificación de la versión check-latest: # opcional # ID del repositorio de distributionManagement en el archivo pom.xml. El valor predeterminado es `github` server-id: # opcional, el valor predeterminado es github # Nombre de la variable de entorno para el nombre de usuario para la autenticación en el repositorio de Apache Maven. El valor predeterminado es $GITHUB_ACTOR Server-username: # opcional, el valor predeterminado es GITHUB_ACTOR # Nombre de la variable de entorno para contraseña o token para la autenticación en el repositorio de Apache Maven. El valor predeterminado es $GITHUB_TOKEN contraseña del servidor: # opcional, el valor predeterminado es GITHUB_TOKEN # Ruta a donde se escribirá el archivo settings.xml. El valor predeterminado es ~/.m2. Ruta de configuración: # opcional # Sobrescribe el archivo settings.xml si existe. El valor predeterminado es "verdadero". overwrite-settings: # opcional, el valor predeterminado es verdadero # Clave privada de GPG para importar. El valor predeterminado es la cadena vacía. gpg-private-key: # opcional # Nombre de la variable de entorno para la frase de contraseña de clave privada de GPG. El valor predeterminado es $GPG_PASSPHRASE. frase de contraseña gpg: # opcional # Nombre de la plataforma de construcción para almacenar en caché las dependencias. Puede ser "maven", "gradle" o "sbt". caché: # opcional # La ruta a un archivo de dependencia: pom.xml, build.gradle, build.sbt, etc. Esta opción se puede usar con la opción `cache`. Si se omite esta opción, la acción busca el archivo de dependencia en todo el repositorio. Esta opción admite comodines y una lista de nombres de archivo para almacenar en caché múltiples dependencias. Cache-dependency-path: # opcional # Solución alternativa para pasar el estado del trabajo para publicar el paso del trabajo. Esta variable no está destinada a la configuración manual job-status: # opcional, el valor predeterminado es ${{ job.status }} # El token utilizado para autenticarse al obtener manifiestos de versión alojados en github.com, como para la compilación de Microsoft de OpenJDK. Al ejecutar esta acción en github.com, el valor predeterminado es suficiente. Al ejecutarse en GHES, puede pasar un token de acceso personal para github.com si está experimentando una limitación de velocidad. token: # opcional, el valor predeterminado es ${{ github.server_url == 'https://github.com' && github.token || '' }} # Nombre del ID de la cadena de herramientas de Maven si no se desea el nombre predeterminado de "${distribution}_${java-version}". Vea ejemplos de sintaxis admitida en el archivo de uso avanzado mvn-toolchain-id: # opcional # Nombre del proveedor de la cadena de herramientas de Maven si no se desea el nombre predeterminado de "${distribution}". Vea ejemplos de sintaxis admitida en el archivo de uso avanzado mvn-toolchain-vendor: # opcional 
- nombre: Lightstep Pre-Deploy Check # Puede fijar a la confirmación exacta o a la versión. # usos: lightstep/lightstep-action-predeploy@22bec553a6d0fb3de5026acb1159085601f76408 usos: lightstep/lightstep-action-predeploy@v0.2.6 Con: # La organización asociada con su cuenta de Lightstep (generalmente el nombre de su empresa) lightstep_organization: # opcional # El proyecto Lightstep asociado con este repositorio lightstep_project: # opcional # La clave para acceder a la API pública de Lightstep lightstep_api_key: # opcional # El token para acceder a la API de Rollbar rollbar_api_token: # opcional # El token para acceder a la API de PagerDuty pagerduty_api_token: # opcional # Si se establece en verdadero, contrae todas las condiciones en una sola fila de tabla rollup_conditions: # opcional # Si se establece en verdadero, no se añadirá un comentario a las solicitudes de extracción disable_comment: # opcional 
- nombre: Anotate Nobl9 SLO # Puede fijar a la confirmación exacta o a la versión. # usos: nobl9/action-annotate-slo@1b79aa07d76525d32ec2d468f8afd1858e160cc1 usos: nobl9/action-annotate-slo@v0.1.0 Con: # Anotación para añadir Anotación: # SLO para anotar slo: # opcional # Etiquetas para anotar Etiquetas: # opcional # Proyecto que contiene SLO para anotar Proyecto: # versión slockl para usar sloctl_version: # opcional, el valor predeterminado es 0,0,99 # Nobl9 ID de cliente nobl9_client_id: # Nobl9 secreto del cliente nobl9_client_secret: # Nobl9 okta org url nobl9_okta_org_url: # opcional, el valor predeterminado es https://accounts.nobl9.com # Nobl9 okta auth server nobl9_okta_auth_server: # opcional, el valor predeterminado es auseg9kiegWKEtJZC416 # Nobl9 URL nobl9_url: # opcional, el valor predeterminado es https://app.nobl9.com/api 
- nombre: Rainforest QA GitHub Action # Puede fijar a la confirmación exacta o a la versión. # usos: rainforestapp/github-action@5855f2c2427c564554663926b143b9ce3bce17c8 usos: rainforestapp/github-action@v3.2.5 Con: # Una cadena arbitraria para asociar con la ejecución descripción: # opcional, el valor predeterminado es # Solo ejecute pruebas vinculadas a este grupo de ejecución run_group_id: # Utilice un entorno específico para esta carrera environment_id: # opcional, el valor predeterminado es # Utilice una URL específica para esta ejecución custom_url: # opcional, el valor predeterminado es # Cómo se deben manejar otras ejecuciones actualmente en curso. Los valores son `cancelar` para cancelar ejecuciones en el mismo entorno que su nueva ejecución y `cancelar-all` para cancelar todas las ejecuciones conflicto: # opcional, el valor predeterminado es # El método de ejecución a utilizar para esta ejecución execution_method: # opcional, el valor predeterminado es # DESOBLECIDO: Use `execution_method` en su lugar crowd: # opcional, el valor predeterminado es # Información de lanzamiento introducida manualmente sobre la versión con la que se asocia la ejecución lanzamiento: # opcional, el valor predeterminado es # Si se establece en un valor > 0 y una prueba falla, se volverá a intentar dentro de la misma ejecución, hasta ese número de veces automation_max_retries: # opcional, el valor predeterminado es # Utilice una rama específica de Rainforest para esta carrera rama: # opcional, el valor predeterminado es # Su token de API de control de calidad de Rainforest Ficha: # No esperes a que se complete una carrera antes de salir fondo: # opcional, el valor predeterminado es # Establecer en verdadero para ejecutar validaciones de parámetros sin iniciar una nueva ejecución de Rainforest dry_run: # opcional, el valor predeterminado es # La clave de caché que se utilizará para guardar/restaurar un ID de ejecución de Rainforest (utilizado para volver a ejecutar pruebas fallidas) cache_key: # opcional, el valor predeterminado es ${{ github.job }}-${{ github.action }} 
- nombre: Honeycomb Buildevents # Puede fijar a la confirmación exacta o a la versión. # usos: honeycombio/gha-buildevents@e891e91ad0fcd80b71430a97ebf5a9baecac388a Usos: honeycombio/gha-buildevents@v3.0.0 Con: # Una clave API Honeycomb - necesaria para enviar rastros. Apikey: # El valor predeterminado es https://api.honeycomb.io apihost: # opcional, el valor predeterminado es https://api.honeycomb.io # El conjunto de datos Honeycomb al que enviar rastros. Conjunto de datos: # Estado del trabajo o trabajo. Establecer estas señales para cuándo terminar el rastro. Estado: # opcional # Marca de tiempo de Unix para representar cuándo comenzó el seguimiento. No es necesario para flujos de trabajo de un solo trabajo. Envíe el uso final de la acción para flujos de trabajo de múltiples trabajos. trace-start: # opcional # Establezca esto en una clave única para esta celda de matriz, solo útil cuando se usa una matriz de construcción. clave de matriz: # opcional # Valor obsoleto - por favor, use el estado en su lugar Estado del trabajo: # opcional # (verdadero/falso) Si enviar un evento que representa la configuración de esta acción. send-init-event: # opcional, el valor predeterminado es verdadero 
- nombre: ServiceNow ITSM Actions # Puede fijar a la confirmación exacta o a la versión. # usos: shundor/servicenow-actions@e61808a890f5eeae51a75fc433ed91842e46040c Usos: shundor/servicenow-actions@v1.0 Con: # Host de instancia de ServiceNow sn_host: # Nombre de usuario de ServiceNow Sn_username: # Contraseña de ServiceNow Sn_Password: # ID de cliente de ServiceNow sn_client_id: # Secreto del cliente de ServiceNow sn_client_secret: # Nombre del módulo de ServiceNow Sn_module: # Parámetros del módulo ServiceNow Sn_module_params: # Habilitar el modo de depuración debug: # opcional, el valor predeterminado es falso 
- nombre: Setup Autify Interfaz de línea de comandos (CLI) # Puede fijar a la confirmación exacta o a la versión. # usos: autifyhq/actions-setup-cli@62decfdbb7902d221d4865ae6170d5dbcd3c90db Usos: autifyhq/actions-setup-cli@v2.1.2 Con: # URL del instalador de Shell shell-installer-url: # opcional, el valor predeterminado es https://autify-cli-assets.s3.amazonaws.com/autify-cli/channels/stable/install-cicd.bash 
- nombre: Autify for Mobile Run Test Plan # Puede fijar a la confirmación exacta o a la versión. # usos: autifyhq/mobile-run-test-plan-action@40bebde5f60117ec81312051028d22238649d280 Usos: autifyhq/mobile-run-test-plan-action@v1.0.0 Con: # Token de acceso personal autify_for_mobile_api_token: # ID de plan de prueba que desea ejecutar test_plan_id: # ID de compilación que desea usar build_id: # URL base de la API del plan de prueba test_plan_api_base_url: # opcional, el valor predeterminado es https://mobile-app.autify.com/api/v1/test_plans/ 

- nombre: Rational Integration Tester GitHub Action # Puede fijar a la confirmación exacta o a la versión. # usos: IBM/devopsauto-integrtest-actions@5096cad49a7c728d0de5931481f5567254c70a70 Usos: IBM/devopsauto-integrtest-actions@v1 Con: # La ruta totalmente cualificada al directorio del proyecto Rational Integration Tester. Este valor se ignorará si se utiliza el campo parameterFile. ProjectDir: # El nombre del proyecto de prueba API. Este valor se ignorará si se utiliza el campo parameterFile. Nombre del proyecto: # El entorno de prueba API que se utilizará para esta ejecución. Este valor se ignorará si se utiliza el campo parameterFile. Entorno: # Lista separada de punto y coma de pruebas/suites para ejecutar. Este valor se ignorará si se utiliza el campo parameterFile. Pruebas: # La ruta completamente calificada a un archivo de parámetros que contiene argumentos de proyecto, entorno y ejecución para una o más pruebas. parameterFile: # opcional # Especifique la carpeta a la que exportar los informes de JUnit. junitDir: # opcional 
- nombre: Run Parasoft Jtest # Puede fijar a la confirmación exacta o a la versión. # usos: parasoft/run-jtest-action@ae433ddf714970d4a40842e7a4788facd508d68d Usos: parasoft/run-jtest-action@2.0.0 Con: # Carpeta de instalación de Parasoft Jtest. Si no se especifica, el ejecutable cpptestcli debe añadirse a PATH. installDir: # opcional # Directorio de trabajo para ejecutar Jtest. workingDir: # opcional, el valor predeterminado es ${{ github.workspace }} # Pruebe la configuración que se utilizará para el análisis de código. testConfig: # opcional, el valor predeterminado está incorporado://Reglas recomendadas # Carpeta de salida para informes de análisis de código. reportDir: # opcional, el valor predeterminado son los informes # Formato de los informes del análisis de código. reportFormat: # opcional, el valor predeterminado es xml,html,sarif # Alcance de entrada para análisis. entrada: # opcional, el valor predeterminado es jtest.data.json # Parámetros adicionales para el ejecutable jtestcli. additionalParams: # opcional, el valor predeterminado es 
- nombre: Ejecutar servidor de prueba autenticado # Puede fijar a la confirmación exacta o a la versión. # usos: authzed/action-testserver@f8a5a3c34f6d8ef0e64577c802d39728bdf406eb Usos: authzed/action-testserver@v3 Con: # Versión de `zed testserver` a usar versión: # opcional, el valor predeterminado es el más reciente 
- nombre: Solicitante privilegiado usos: github/privileged-requester@v2.3.2 Con: # 'El token de GitHub utilizado para crear un cliente autenticado - ¡Se le proporciona por defecto! - Token de alcance del repositorio'  Puede usar el token proporcionado predeterminado o puede proporcionar un PAT como un token de usuario de robot alternativo  github_token: # por defecto es ${{ github.token }} # Cuando se usa el github.token predeterminado (desde arriba), el "handle" se obtrae de esta entrada, ya que el token tiene un alcance de repositorio y ni siquiera puede leer su propio identificador. No debería necesitar cambiar esta entrada. handle: # default es github-actions[bot] # Ruta donde se puede encontrar la configuración del solicitante privilegiado ruta: # por defecto es config/privileged-requester.yaml # El creador del PR para este evento de solicitud de extracción prCreator: # por defecto es ${{ github.event.pull_request.user.login }} # El número de PR para este evento de solicitud de extracción prNumber: # por defecto es ${{ github.event.pull_request.number }} # Una opción para comprobar que cada confirmación en el PR se realiza desde el solicitante privilegiado checkCommits: # el valor predeterminado es verdadero # Una opción para comprobar que la diferencia de PR solo tiene una diferencia de eliminación, sin adiciones checkDiff: # por defecto es verdadero # Una opción para comprobar que las etiquetas del PR coinciden con las definidas en la configuración del solicitante privilegiado checkLabels: # por defecto es verdadero # Si validar o no todas las confirmaciones tiene una verificación adecuada a través de las confirmaciones firmadas por GPG commitVerification: # el valor predeterminado es - nombre: Publicar evento # Puede fijar a la confirmación exacta o a la versión. # usos: fiberplane/publish-event@63e125ddca44bfb308eec949bcb22f80230394b0 Usos: fiberplane/publish-event@v1.2 Con: # Token de API utilizado para acceder a la API de Fiberplane con API-token: # Título del evento recién creado título: # por defecto es GitHub Action # Etiquetas para añadir al evento. Formato: clave=valor|clave=valor|clave=valor  Etiquetas: # Hora en la que ocurrió el evento. El valor predeterminado es la hora actual. El formato debe ser una cadena con formato RFC 3339 tiempo: # opcional # ID del espacio de trabajo en el que se debe publicar el evento Workspace-id: # URL base de la API de Fiberplane fp-base-url: # el valor predeterminado es https://studio.fiberplane.com 
---
name: Lint

on: # yamllint disable-line rule:truthy
  push: null
  pull_request: null

permissions: {}

jobs:
  build:
    name: Lint
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      - name: Super-linter
        uses: super-linter/super-linter@v7.1.0 # x-release-please-version
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    jobs:
  quickstart:
    runs-on: ubuntu-latest
    name: quickstart

    env:
      P4PORT: ${{ secrets.P4PORT }}
      P4USER: ${{ secrets.P4USER }}
      P4PASSWD: ${{ secrets.P4PASSWD }}
 steps:
  - uses: perforce/setup-p4@v1
    with:
      command: login
      p4_version: 21.2
    name: Nobl9 Annotate SLO GitHub Actions Demo
on: [push]
jobs:
  annotate-slos:
    runs-on: ubuntu-latest
    steps:
      - uses: nobl9/action-annotate-slo@v0.1.0
        with:
          nobl9_client_id: ${{ secrets.CLIENT_ID }}
          nobl9_client_secret: ${{ secrets.CLIENT_SECRET }}
          annotation: "Release v1.0.0"
          project: "default"
          slo: "my-slo-name"
      - uses: actions/checkout@v3
  with:
    fetch-depth: 0

- name: Create Sentry release
  uses: getsentry/action-release@v1
  env:
    SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
    SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
    # SENTRY_URL: https://sentry.io/
  with:
    environment: production
    name: Label sponsors
on:
  pull_request:
    types: [opened]
  issues:
    types: [opened]
jobs:
  build:
    name: is-sponsor-label
    runs-on: ubuntu-latest
    steps:
      - uses: JasonEtco/is-sponsor-label-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
- uses: actions/checkout@v2
- uses: ruby/setup-ruby@v1
  with:
    ruby-version: '3.0'
    bundler-cache: true
    working-directory: 'ios'
- uses: maierj/fastlane-action@v3.1.0
  with:
    lane: 'beta'
    subdirectory: 'ios'
     # Run MegaLinter to detect linting and security issues
  - job: MegaLinter
    pool:
      vmImage: ubuntu-latest
    steps:
      # Checkout repo
      - checkout: self

      # Pull MegaLinter docker image
      - script: docker pull oxsecurity/megalinter:v8
        displayName: Pull MegaLinter

      # Run MegaLinter
      - script: |
          docker run -v $(System.DefaultWorkingDirectory):/tmp/lint \
            --env-file <(env | grep -e SYSTEM_ -e BUILD_ -e TF_ -e AGENT_) \
            -e SYSTEM_ACCESSTOKEN=$(System.AccessToken) \
            -e GIT_AUTHORIZATION_BEARER=$(System.AccessToken) \
            oxsecurity/megalinter:v8
        displayName: Run MegaLinter

      # Upload MegaLinter reports
      - task: PublishPipelineArtifact@1
        condition: succeededOrFailed()
        displayName: Upload MegaLinter reports
        inputs:
          targetPath: "$(System.DefaultWorkingDirectory)/megalinter-reports/"
          artifactName: MegaLinterReport
          from fastapi import FastAPI
from pydantic import BaseModel
from typing import List, Optional

api = FastAPI()

class LoginCredentials(BaseModel):
    username: str
    password: str

class Profile(BaseModel):
    username: str
    age: Optional[int]
    hobbies: List[str]

class LoginResponseData(BaseModel):
    token: str
    profile: Profile

@api.post('/login/', response_model=LoginResponseData)
def login(body: LoginCredentials):
    profile = Profile(**body.dict(), age=72, hobbies=['cats'])
    
